{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","sortBy","name","color","App","useState","sortType","setSortType","sortReverse","setSortReverse","goods","type","reverse","goodsSorted","sort","good1","good2","localeCompare","length","sortGoods","className","map","el","cn","onClick","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAS,CACb,CAAEC,KAAM,sBAAuBC,MAAO,WACtC,CAAED,KAAM,iBAAkBC,MAAO,cACjC,CAAED,KAAM,UAAWC,MAAO,cAC1B,CAAED,KAAM,QAASC,MAAO,cAoBnB,IAAMC,EAAM,WACjB,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAsCF,oBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACMC,EApBR,SAAmBA,EAAOC,EAAMC,GAC9B,IAAMC,EAAW,YAAOH,GAaxB,OAXIC,GACFE,EAAYC,MAAK,SAACC,EAAOC,GAAR,MACL,wBAATL,EACGI,EAAME,cAAcD,GACpBD,EAAMG,OAASF,EAAME,UAGzBN,GACFC,EAAYD,UAGPC,EAMOM,CAAUnB,EAAiBM,EAAUE,GAEnD,OACE,sBAAKY,UAAU,kBAAf,UACE,qBAAKA,UAAU,UAAf,SACGnB,EAAOoB,KAAI,SAAAC,GAAE,OACC,UAAZA,EAAGpB,MAAqBI,GAAYE,IACnC,wBACEG,KAAK,SAELS,UAAWG,IACT,SACAD,EAAGnB,MACH,CACE,WAAa,WACX,OAAQmB,EAAGpB,MACT,IAAK,sBAEL,IAAK,iBACH,OAAOI,IAAagB,EAAGpB,KACzB,IAAK,UACH,OAAQM,EACV,IAAK,QACH,OAAO,EACT,QACE,OAAO,GAXA,KAgBjBgB,QAAS,WACP,OAAQF,EAAGpB,MACT,IAAK,sBAEL,IAAK,iBACH,OAAOK,EAAYe,EAAGpB,MACxB,IAAK,UACH,OACIO,GADID,GAGV,IAAK,QACH,OACEC,GAAe,GACfF,GAAY,GAEhB,QACE,OAAO,IAvCf,SA2CGe,EAAGpB,MAzCCoB,EAAGpB,WA+ChB,6BACGQ,EAAMW,KAAI,SAAAI,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCpGlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8b62c322.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst sortBy = [\n  { name: 'Sort alphabetically', color: 'is-info' },\n  { name: 'Sort by length', color: 'is-success' },\n  { name: 'Reverse', color: 'is-warning' },\n  { name: 'Reset', color: 'is-danger' },\n];\n\nfunction sortGoods(goods, type, reverse) {\n  const goodsSorted = [...goods];\n\n  if (type) {\n    goodsSorted.sort((good1, good2) => (\n      (type === 'Sort alphabetically')\n        ? good1.localeCompare(good2)\n        : good1.length - good2.length));\n  }\n\n  if (reverse) {\n    goodsSorted.reverse();\n  }\n\n  return goodsSorted;\n}\n\nexport const App = () => {\n  const [sortType, setSortType] = useState(false);\n  const [sortReverse, setSortReverse] = useState(false);\n  const goods = sortGoods(goodsFromServer, sortType, sortReverse);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        {sortBy.map(el => (\n          (el.name !== 'Reset' || (sortType || sortReverse)) && (\n            <button\n              type=\"button\"\n              key={el.name}\n              className={cn(\n                'button',\n                el.color,\n                {\n                  'is-light': (() => {\n                    switch (el.name) {\n                      case 'Sort alphabetically':\n                        return sortType !== el.name;\n                      case 'Sort by length':\n                        return sortType !== el.name;\n                      case 'Reverse':\n                        return !sortReverse;\n                      case 'Reset':\n                        return true;\n                      default:\n                        return false;\n                    }\n                  })(),\n                },\n              )}\n              onClick={() => {\n                switch (el.name) {\n                  case 'Sort alphabetically':\n                    return setSortType(el.name);\n                  case 'Sort by length':\n                    return setSortType(el.name);\n                  case 'Reverse':\n                    return (sortReverse)\n                      ? setSortReverse(false)\n                      : setSortReverse(true);\n                  case 'Reset':\n                    return (\n                      setSortReverse(false),\n                      setSortType(false)\n                    );\n                  default:\n                    return false;\n                }\n              }}\n            >\n              {el.name}\n            </button>\n          )\n        ))}\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}