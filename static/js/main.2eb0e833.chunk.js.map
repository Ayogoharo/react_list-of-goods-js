{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","sortBy","name","color","App","useState","sortType","setSortType","isReversed","setisReversed","goods","type","reverse","goodsSorted","sort","good1","good2","localeCompare","length","sortGoods","isLight","className","map","el","cn","onClick","clickEvent","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAS,CACb,CAAEC,KAAM,sBAAuBC,MAAO,WACtC,CAAED,KAAM,iBAAkBC,MAAO,cACjC,CAAED,KAAM,UAAWC,MAAO,cAC1B,CAAED,KAAM,QAASC,MAAO,cAoBnB,IAAMC,EAAM,WACjB,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EApBR,SAAmBA,EAAOC,EAAMC,GAC9B,IAAMC,EAAW,YAAOH,GAaxB,OAXIC,GACFE,EAAYC,MAAK,SAACC,EAAOC,GAAR,MACL,wBAATL,EACGI,EAAME,cAAcD,GACpBD,EAAMG,OAASF,EAAME,UAGzBN,GACFC,EAAYD,UAGPC,EAMOM,CAAUnB,EAAiBM,EAAUE,GAEnD,SAASY,EAAQlB,GACf,OAAQA,GACN,IAAK,sBAEL,IAAK,iBACH,OAAOI,IAAaJ,EACtB,IAAK,UACH,OAAQM,EACV,IAAK,QACH,OAAO,EACT,QACE,OAAO,GA4Bb,OACE,sBAAKa,UAAU,kBAAf,UACE,qBAAKA,UAAU,UAAf,SACGpB,EAAOqB,KAAI,SAAAC,GAAE,OANF,UAOQA,EAAGrB,MAPCI,GAAYE,IAQhC,wBACEG,KAAK,SAELU,UAAWG,IACT,SACAD,EAAGpB,MACH,CACE,WAAYiB,EAAQG,EAAGrB,QAG3BuB,QAAS,YAvCrB,SAAoBvB,GAClB,OAAQA,GACN,IAAK,sBAEL,IAAK,iBACH,OAAOK,EAAYL,GACrB,IAAK,UACH,OACIO,GADID,GAGV,IAAK,QACH,OACEC,GAAc,GACdF,GAAY,GAEhB,WAyBUmB,CAAWH,EAAGrB,OAXlB,SAcGqB,EAAGrB,MAZCqB,EAAGrB,WAkBhB,6BACGQ,EAAMY,KAAI,SAAAK,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YC9GlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2eb0e833.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst sortBy = [\n  { name: 'Sort alphabetically', color: 'is-info' },\n  { name: 'Sort by length', color: 'is-success' },\n  { name: 'Reverse', color: 'is-warning' },\n  { name: 'Reset', color: 'is-danger' },\n];\n\nfunction sortGoods(goods, type, reverse) {\n  const goodsSorted = [...goods];\n\n  if (type) {\n    goodsSorted.sort((good1, good2) => (\n      (type === 'Sort alphabetically')\n        ? good1.localeCompare(good2)\n        : good1.length - good2.length));\n  }\n\n  if (reverse) {\n    goodsSorted.reverse();\n  }\n\n  return goodsSorted;\n}\n\nexport const App = () => {\n  const [sortType, setSortType] = useState(false);\n  const [isReversed, setisReversed] = useState(false);\n  const goods = sortGoods(goodsFromServer, sortType, isReversed);\n\n  function isLight(name) {\n    switch (name) {\n      case 'Sort alphabetically':\n        return sortType !== name;\n      case 'Sort by length':\n        return sortType !== name;\n      case 'Reverse':\n        return !isReversed;\n      case 'Reset':\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function clickEvent(name) {\n    switch (name) {\n      case 'Sort alphabetically':\n        return setSortType(name);\n      case 'Sort by length':\n        return setSortType(name);\n      case 'Reverse':\n        return (isReversed)\n          ? setisReversed(false)\n          : setisReversed(true);\n      case 'Reset':\n        return (\n          setisReversed(false),\n          setSortType(false)\n        );\n      default:\n        return false;\n    }\n  }\n\n  function enethingButReset(name) {\n    return name !== 'Reset' || (sortType || isReversed);\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        {sortBy.map(el => (\n          (enethingButReset(el.name)) && (\n            <button\n              type=\"button\"\n              key={el.name}\n              className={cn(\n                'button',\n                el.color,\n                {\n                  'is-light': isLight(el.name),\n                },\n              )}\n              onClick={() => {\n                clickEvent(el.name);\n              }}\n            >\n              {el.name}\n            </button>\n          )\n        ))}\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}